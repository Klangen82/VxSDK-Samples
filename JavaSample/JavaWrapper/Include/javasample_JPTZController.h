/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class javasample_JPTZController */

#ifndef _Included_javasample_JPTZController
#define _Included_javasample_JPTZController
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     javasample_JPTZController
 * Method:    ContinuousMove
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_ContinuousMove
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    TriggerPreset
 * Signature: (Ljavasample/JPreset;)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_TriggerPreset
  (JNIEnv *, jobject, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    TriggerPattrn
 * Signature: (Ljavasample/JPattern;)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_TriggerPattrn
  (JNIEnv *, jobject, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    PTZStop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_javasample_JPTZController_PTZStop
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    ContinuousFocus
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_ContinuousFocus
  (JNIEnv *, jobject, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    ContinuousIris
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_ContinuousIris
  (JNIEnv *, jobject, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    GetPresets
 * Signature: ()[Ljavasample/JPreset;
 */
JNIEXPORT jobjectArray JNICALL Java_javasample_JPTZController_GetPresets
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    GetPatterns
 * Signature: ()[Ljavasample/JPattern;
 */
JNIEXPORT jobjectArray JNICALL Java_javasample_JPTZController_GetPatterns
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    AbsolutePan
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_AbsolutePan
  (JNIEnv *, jobject, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    AbsoluteTilt
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_AbsoluteTilt
  (JNIEnv *, jobject, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    AbsoluteZoom
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_AbsoluteZoom
  (JNIEnv *, jobject, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    AbsoluteMove
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_AbsoluteMove__II
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    AbsoluteMove
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_AbsoluteMove__III
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     javasample_JPTZController
 * Method:    GetX
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_javasample_JPTZController_GetX
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    GetY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_javasample_JPTZController_GetY
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    GetZ
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_javasample_JPTZController_GetZ
  (JNIEnv *, jobject);

/*
 * Class:     javasample_JPTZController
 * Method:    RelativeMove
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_javasample_JPTZController_RelativeMove
  (JNIEnv *, jobject, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
